import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { NativeMetaTransaction, NativeMetaTransactionInterface } from "../../../../../contracts/@maticnetwork/pos-portal/RootChainManager.sol/NativeMetaTransaction";
declare type NativeMetaTransactionConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class NativeMetaTransaction__factory extends ContractFactory {
    constructor(...args: NativeMetaTransactionConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<NativeMetaTransaction & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): NativeMetaTransaction__factory;
    static readonly bytecode = "0x60806040526000805460ff1916905534801561001a57600080fd5b506108278061002a6000396000f3fe60806040526004361061004a5760003560e01c80630c53c51c1461004f5780630f7e59701461018857806320379ee51461019d5780632d0335ab146101c45780633408e470146101f7575b600080fd5b610113600480360360a081101561006557600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561009057600080fd5b8201836020820111156100a257600080fd5b803590602001918460018302840111640100000000831117156100c457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040013560ff1661020c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014d578181015183820152602001610135565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019457600080fd5b5061011361050f565b3480156101a957600080fd5b506101b261052c565b60408051918252519081900360200190f35b3480156101d057600080fd5b506101b2600480360360208110156101e757600080fd5b50356001600160a01b0316610532565b34801561020357600080fd5b506101b261054d565b6060610216610767565b50604080516060810182526001600160a01b038816600081815260026020908152908490205483528201529081018690526102548782878787610551565b61028f5760405162461bcd60e51b81526004018080602001828103825260218152602001806107fa6021913960400191505060405180910390fd5b6001600160a01b0387166000908152600260205260409020546102b990600163ffffffff61062e16565b6001600160a01b03881660008181526002602090815260408083209490945583519283523383820181905260609484018581528b51958501959095528a517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b958d9592948d94919260808501928601918190849084905b83811015610348578181015183820152602001610330565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160006060306001600160a01b0316888a6040516020018083805190602001908083835b602083106103c65780518252601f1990920191602091820191016103a7565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b8152601401925050506040516020818303038152906040526040518082805190602001908083835b602083106104455780518252601f199092019160209182019101610426565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146104a7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ac565b606091505b509150915081610503576040805162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000604482015290519081900360640190fd5b98975050505050505050565b604051806040016040528060018152602001603160f81b81525081565b60015490565b6001600160a01b031660009081526002602052604090205490565b4690565b60006001600160a01b0386166105985760405162461bcd60e51b81526004018080602001828103825260258152602001806107d56025913960400191505060405180910390fd5b60016105ab6105a68761068f565b61071b565b83868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610605573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600082820183811015610688576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600060405180608001604052806043815260200161079260439139805190602001208260000151836020015184604001518051906020012060405160200180858152602001848152602001836001600160a01b03166001600160a01b03168152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b600061072561052c565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60405180606001604052806000815260200160006001600160a01b0316815260200160608152509056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e6174757265294e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5349474e45525369676e657220616e64207369676e617475726520646f206e6f74206d61746368a164736f6c6343000606000a";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address payable";
            readonly name: "relayerAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "functionSignature";
            readonly type: "bytes";
        }];
        readonly name: "MetaTransactionExecuted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "ERC712_VERSION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "functionSignature";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sigR";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sigS";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "sigV";
            readonly type: "uint8";
        }];
        readonly name: "executeMetaTransaction";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDomainSeperator";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "getNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): NativeMetaTransactionInterface;
    static connect(address: string, runner?: ContractRunner | null): NativeMetaTransaction;
}
export {};
//# sourceMappingURL=NativeMetaTransaction__factory.d.ts.map